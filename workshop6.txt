MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE PROCEDURE pro_naik (
    ->     IN jenis_produk INT,
    ->     IN persentasi_kenaikan INT
    -> )
    -> BEGIN
    ->     UPDATE produk
    ->     SET harga_jual = harga_jual + (harga_jual * persentasi_kenaikan / 100)
    ->     WHERE jenis_produk_id = jenis_produk;
    -> END $$
Query OK, 0 rows affected, 5 warnings (0.078 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
MariaDB [dbpos_sib6]> CALL pro_naik(1,4);
Query OK, 13 rows affected (0.065 sec)

MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE FUNCTION umur(tgl_lahir DATE)
    -> RETURNS INT
    -> BEGIN
    ->     DECLARE umur INT;
    ->     SET umur = YEAR(CURDATE()) - YEAR(tgl_lahir);
    ->     RETURN umur;
    -> END $$
Query OK, 0 rows affected (0.013 sec)
MariaDB [dbpos_sib6]> SELECT nama, umur(tgl_lahir) AS umur FROM pelanggan;
+--------------------+------+
| nama               | umur |
+--------------------+------+
| Agung Sedayu Group |   14 |
| Pandan Wangi       |   74 |
| Sekar Mirah        |   41 |
| Swandaru Geni      |   43 |
| Pradabashu         |   39 |
| Gayatri Dwi        |   37 |
| Dewi Gyat          |   36 |
| Andre Haru         |   34 |
| Ahmad Hasan        |   32 |
| Cassanndra         |   34 |
| Andi Wijaya        |    1 |
| Ira                |    1 |
+--------------------+------+
12 rows in set (0.008 sec)

MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]>
MariaDB [dbpos_sib6]> CREATE FUNCTION kategori_harga(harga DOUBLE)
    -> RETURNS VARCHAR(20)
    -> BEGIN
    ->     DECLARE kategori VARCHAR(20);
    ->
    ->     IF harga <= 500000 THEN
    ->         SET kategori = 'murah';
    ->     ELSEIF harga > 500000 AND harga <= 3000000 THEN
    ->         SET kategori = 'sedang';
    ->     ELSEIF harga > 3000000 AND harga <= 10000000 THEN
    ->         SET kategori = 'mahal';
    ->     ELSE
    ->         SET kategori = 'sangat mahal';
    ->     END IF;
    ->
    ->     RETURN kategori;
    -> END$$
Query OK, 0 rows affected (0.004 sec)
MariaDB [dbpos_sib6]> SELECT kategori_harga(250000); 
+------------------------+
| kategori_harga(250000) |
+------------------------+
| murah                  |
+------------------------+
1 row in set (0.011 sec)

MariaDB [dbpos_sib6]> SELECT kategori_harga(1000000); 
+-------------------------+
| kategori_harga(1000000) |
+-------------------------+
| sedang                  |
+-------------------------+
1 row in set (0.000 sec)

MariaDB [dbpos_sib6]> SELECT kategori_harga(5000000); 
+-------------------------+
| kategori_harga(5000000) |
+-------------------------+
| mahal                   |
+-------------------------+
1 row in set (0.000 sec)

MariaDB [dbpos_sib6]> SELECT kategori_harga(15000000);
+--------------------------+
| kategori_harga(15000000) |
+--------------------------+
| sangat mahal             |
+--------------------------+
1 row in set (0.000 sec)

MariaDB [dbpos_sib6]> SELECT *FROM pesanan;
+----+------------+---------+--------------+
| id | tanggal    | total   | pelanggan_id |
+----+------------+---------+--------------+
|  1 | 2015-11-04 | 9720000 |            1 |
|  2 | 2015-11-04 |   17500 |            3 |
|  3 | 2015-11-04 |       0 |            6 |
|  4 | 2015-11-04 |       0 |            7 |
|  5 | 2015-11-04 |       0 |           10 |
|  6 | 2015-11-04 |       0 |            2 |
|  7 | 2015-11-04 |       0 |            5 |
|  8 | 2015-11-04 |       0 |            4 |
|  9 | 2015-11-04 |       0 |            8 |
| 10 | 2015-11-04 |       0 |            9 |
| 11 | 2015-11-04 |   30000 |            9 |
| 12 | 2020-11-04 |   40000 |            9 |
+----+------------+---------+--------------+
12 rows in set (0.003 sec)
MariaDB [dbpos_sib6]> ALTER TABLE pembayaran MODIFY COLUMN status_pembayaran varchar(25);
Query OK, 0 rows affected (0.007 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER cek_pembayaran BEFORE INSERT ON pembayaran
    -> FOR EACH ROW
    -> BEGIN
    ->     DECLARE total_bayar DECIMAL(10, 2);
    ->     DECLARE total_pesanan DECIMAL(10, 2);
    ->
    ->     SELECT SUM(jumlah) INTO total_bayar FROM pembayaran WHERE pesanan_id = NEW.pesanan_id;
    ->     SELECT total INTO total_pesanan FROM pesanan WHERE id = NEW.pesanan_id;
    ->
    ->     IF total_bayar + NEW.jumlah >= total_pesanan THEN
    ->         SET NEW.status_pembayaran = 'Lunas';
    ->     END IF;
    -> END $$
Query OK, 0 rows affected (0.016 sec)

MariaDB [dbpos_sib6]> INSERT INTO pembayaran (nokuitansi, tanggal, jumlah, ke, pesanan_id, status_pembayaran)
    -> VALUES ('KWI001', '2023-03-03', 200000, 1, 1, 'Some Status');
Query OK, 1 row affected (0.016 sec)

MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE PROCEDURE kurangi_stok(IN produk_id INT, IN jumlah_pesanan INT)
    -> BEGIN
    ->   DECLARE stok_produk INT;
    ->
    ->   -- Dapatkan jumlah stok produk saat ini
    ->   SELECT stok INTO stok_produk FROM produk WHERE id = produk_id;
    ->
    ->   -- Kurangi stok dengan jumlah pesanan
    ->   SET stok_produk = stok_produk - jumlah_pesanan;
    ->
    ->   -- Pastikan stok tidak negatif
    ->   IF stok_produk < 0 THEN
    ->     SIGNAL SQLSTATE '45000'
    ->     SET MESSAGE_TEXT = 'Stok produk tidak mencukupi';
    ->   END IF;
    ->
    ->   -- Update stok produk yang telah dikurangi
    ->   UPDATE produk SET stok = stok_produk WHERE id = produk_id;
    -> END $$
Query OK, 0 rows affected (0.009 sec)

MariaDB [dbpos_sib6]> DELIMITER ;
MariaDB [dbpos_sib6]> DELIMITER $$
MariaDB [dbpos_sib6]> CREATE TRIGGER trig_kurangi_stok AFTER INSERT ON pesanan_items
    -> FOR EACH ROW
    -> BEGIN
    ->   -- Memanggil stored procedure kurangi_stok untuk mengurangi stok produk
    ->   CALL kurangi_stok(NEW.produk_id, NEW.qty);
    -> END $$
Query OK, 0 rows affected (0.019 sec)

